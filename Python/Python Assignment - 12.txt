PYTHON ASSIGNMENT - 12

1. In what modes should the PdfFileReader() and PdfFileWriter() File objects will be opened?

ans. * PdfFileReader() should be opened in 'rb' mode (read binary).
     * PdfFileWriter() should be opened in 'wb' mode (write binary).

2. From a PdfFileReader object, how do you get a Page object for page 5?

ans. You can use the getPage() method of the PdfFileReader object:
     page = pdf_reader.getPage(4)  # Page numbers are 0-based


3. What PdfFileReader variable stores the number of pages in the PDF document?

ans. The numPages variable of the PdfFileReader object stores the number of pages in the PDF document.


4. If a PdfFileReader object’s PDF is encrypted with the password swordfish, what must you do before you can obtain Page objects from it?

ans. You need to decrypt the PDF using the decrypt('swordfish') method before you can obtain Page objects from it.


5. What methods do you use to rotate a page?

ans. To rotate a page in a PDF using PyPDF2, you can use the rotateClockwise() and rotateCounterClockwise() methods of the Page object.


6. What is the difference between a Run object and a Paragraph object?

ans. In python-docx, a Paragraph object represents a single paragraph of text, while a Run object is a contiguous run of text with the same style within a paragraph.


7. How do you obtain a list of Paragraph objects for a Document object that’s stored in a variable named doc?

ans. You can use the paragraphs attribute of the Document object to obtain a list of Paragraph objects:
     paragraphs = doc.paragraphs


8. What type of object has bold, underline, italic, strike, and outline variables?

ans. A Run object in python-docx has these variables that allow you to control formatting properties of the text within a paragraph.


9. What is the difference between False, True, and None for the bold variable?

ans. * False: The text is not bold.
     * True: The text is bold.
     * None: The text inherits its bold formatting from the style applied to the paragraph.


10. How do you create a Document object for a new Word document?

ans. You create a new Document object using the docx.Document() constructor:
     from docx import Document
     doc = Document()



11. How do you add a paragraph with the text 'Hello, there!' to a Document object stored in a variable named doc?

ans. You can add a paragraph using the add_paragraph() method:
     doc.add_paragraph('Hello, there!')



12. What integers represent the levels of headings available in Word documents?

ans.  Headings in Word documents are represented by integers ranging from 0 to 9, where 0 represents the Title style,
      1 represents Heading 1, 2 represents Heading 2, and so on.